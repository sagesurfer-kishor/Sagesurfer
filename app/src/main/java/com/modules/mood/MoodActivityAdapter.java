package com.modules.mood;import android.content.Context;import android.graphics.Color;import androidx.annotation.NonNull;import androidx.appcompat.widget.AppCompatImageView;import androidx.recyclerview.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.bumptech.glide.load.engine.DiskCacheStrategy;import com.bumptech.glide.request.RequestOptions;import com.sagesurfer.collaborativecares.R;import java.util.ArrayList;import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;public class MoodActivityAdapter extends RecyclerView.Adapter<MoodActivityAdapter.MyViewHolder> {    private Context mContext;    private ArrayList<MoodModel> moodModelArrayList;    private moodListActivityAdapterListener moodsListAdapterListener;    int selected_position;    public MoodActivityAdapter(Context mContext, ArrayList<MoodModel> arrayList, moodListActivityAdapterListener moodsListAdapterListener) {        this.mContext = mContext;        this.moodModelArrayList = arrayList;        this.moodsListAdapterListener = moodsListAdapterListener;    }    @NonNull    @Override    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_mood_activity_item, parent, false);        return new MyViewHolder(itemView);    }    @Override    public void onBindViewHolder(@NonNull final MyViewHolder holder, final int position) {        final MoodModel moodModel = moodModelArrayList.get(position);        final int color = Color.parseColor("#0D79C2");        holder.mImageViewMood.setColorFilter(color);        Glide.with(mContext)                .load(moodModel.getUrl())                .transition(withCrossFade())                .apply(new RequestOptions()                        .fitCenter()                        .diskCacheStrategy(DiskCacheStrategy.ALL)) //.RESULT                .into(holder.mImageViewMood);        holder.mTxtViewMood.setText(moodModel.getName());        if (position == selected_position) {            holder.mLinearLayoutMood.setSelected(true);            int color_1 = Color.parseColor("#ffffff"); //white            holder.mImageViewMood.setColorFilter(color_1);            holder.mRelativeLayoutMood.setBackgroundResource(R.drawable.circle_mood_activity_selected);        } else {            holder.mLinearLayoutMood.setSelected(false);            final int color_2 = Color.parseColor("#0D79C2");            holder.mImageViewMood.setColorFilter(color_2);            holder.mRelativeLayoutMood.setBackgroundResource(R.drawable.circle_gray_corners);        }        holder.mLinearLayoutMood.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                final MoodModel moodModels = moodModelArrayList.get(position);                Toast.makeText(mContext, "Name :" + moodModels.getName() + " ID:" + moodModels.getId(), Toast.LENGTH_SHORT).show();                holder.mLinearLayoutMood.setSelected(false);                selected_position = holder.getAdapterPosition();                //moodsListAdapterListener.moodDetailLayoutClicked(moodModels);                notifyDataSetChanged();            }        });    }    @Override    public int getItemCount() {        return moodModelArrayList.size();    }    public class MyViewHolder extends RecyclerView.ViewHolder {        private LinearLayout mLinearLayoutMood;        private RelativeLayout mRelativeLayoutMood;        private AppCompatImageView mImageViewMood;        private TextView mTxtViewMood;        public MyViewHolder(View itemView) {            super(itemView);            mLinearLayoutMood = itemView.findViewById(R.id.linearlayout_activity_cleaning);            mRelativeLayoutMood = itemView.findViewById(R.id.relativelayout_activity);            mImageViewMood = itemView.findViewById(R.id.imageview_activity_cleaning);            mTxtViewMood = itemView.findViewById(R.id.textview_activity_cleaning);        }    }    public interface moodListActivityAdapterListener {        void moodDetailLayoutClicked(MoodModel moodModel);    }}