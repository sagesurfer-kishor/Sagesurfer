package com.modules.caseload.werhope.adapter;import android.content.Context;import android.graphics.Color;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.CheckBox;import android.widget.RelativeLayout;import android.widget.TextView;import com.modules.mood.MoodModel;import com.sagesurfer.collaborativecares.R;import java.util.ArrayList;public class MoodFilterAdapter extends RecyclerView.Adapter<MoodFilterAdapter.MyViewHolder> {    private Context mContext;    private ArrayList<MoodModel> moodModelArrayList;    int selected_position;    boolean isSelectedAll = false;    private onItemClickListener mItemClickListener;    private onItemClickListenerCheckBox mItemClickListenerCheckBox;    public MoodFilterAdapter(Context context, ArrayList<MoodModel> modelArrayList){        this.mContext = context;        this.moodModelArrayList = modelArrayList;    }    @NonNull    @Override    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_whope_progress_note_filter_item, parent, false);        return new MyViewHolder(itemView);    }    @Override    public void onBindViewHolder(@NonNull final MyViewHolder holder, final int position) {        final MoodModel moodModel = moodModelArrayList.get(position);        holder.mTxtViewMood.setText(moodModel.getName());        holder.mTxtViewMood.setTextColor(Color.parseColor(moodModel.getColorName()));        holder.mCheckBoxMood.setChecked(moodModel.isSelected());        holder.mRelativeLayoutMood.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (mItemClickListener != null) {                    mItemClickListener.onItemClickListener(view, position, moodModel,holder.mCheckBoxMood);                }            }        });        holder.mCheckBoxMood.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (mItemClickListenerCheckBox != null) {                    mItemClickListenerCheckBox.onItemClickListenerCheckBox(view, position, moodModel,holder.mCheckBoxMood);                }            }        });    }    @Override    public int getItemCount() {        return moodModelArrayList.size();    }    public class MyViewHolder extends RecyclerView.ViewHolder{        private RelativeLayout mRelativeLayoutMood;        private CheckBox mCheckBoxMood;        private TextView mTxtViewMood;        public MyViewHolder(View itemView) {            super(itemView);            mRelativeLayoutMood = itemView.findViewById(R.id.relative_layout);            mCheckBoxMood = itemView.findViewById(R.id.check_box);            mTxtViewMood = itemView.findViewById(R.id.txt_mood_name);        }    }    public void setOnItemClickListener(onItemClickListener mItemClickListener) {        this.mItemClickListener = mItemClickListener;    }    public interface onItemClickListener {        void onItemClickListener(View view, int position, MoodModel moodModel,CheckBox checkBox);    }    public void setOnItemClickListenerCheckBox(onItemClickListenerCheckBox mItemClickListenerCheckBox) {        this.mItemClickListenerCheckBox = mItemClickListenerCheckBox;    }    public interface onItemClickListenerCheckBox {        void onItemClickListenerCheckBox(View view, int position, MoodModel moodModel,CheckBox checkBox);    }}